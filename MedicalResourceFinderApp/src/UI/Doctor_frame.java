/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DoctorDirectory;
import model.Patient;
import model.*;

/**
 *
 * @author snehal
 */
public class Doctor_frame extends javax.swing.JFrame {

    /**
     * Creates new form Doctor_frame
     */
    //DoctorDirectory doctorlist;
    public Doctor_frame() {
        initComponents();
        //doctorlist = new DoctorDirectory();
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtdid = new javax.swing.JTextField();
        txtdname = new javax.swing.JTextField();
        txtdage = new javax.swing.JTextField();
        dspecz = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        doctortable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtcity = new javax.swing.JTextField();
        txtcommunity = new javax.swing.JTextField();
        txthospital = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Add Doctor");

        jLabel4.setText("Doctor Age");

        jLabel6.setText("Doctor Specialization");

        txtdid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdidActionPerformed(evt);
            }
        });

        dspecz.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MBBS", "BHMS", "BAMS" }));
        dspecz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dspeczActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jButton1.setText("Create");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Doctor ID");

        jLabel3.setText("Doctor Name");

        doctortable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doctor ID", "Doctor Name", "Doctor Age", "Doctor Specz"
            }
        ));
        doctortable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doctortableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(doctortable);

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("BACK");
        jButton4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setText("City");

        jLabel7.setText("Community");

        jLabel8.setText("Hospital");

        txtcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtdage)
                            .addComponent(txtdid)
                            .addComponent(txtdname)
                            .addComponent(dspecz, 0, 165, Short.MAX_VALUE)
                            .addComponent(txtcity)
                            .addComponent(txtcommunity)
                            .addComponent(txthospital)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(119, 119, 119)
                                .addComponent(jButton3))
                            .addComponent(jLabel1))))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtdid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtdname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(dspecz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtdage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtcommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txthospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(54, 54, 54)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtdidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdidActionPerformed

    private void dspeczActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dspeczActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dspeczActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String name = txtdname.getText();
        String id = txtdid.getText();
        int age = Integer.parseInt(txtdage.getText());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        //String dob = sdf.format(ddob.getDate());
        String specz = dspecz.getSelectedItem().toString();
        String dcity = txtcity.getText();
        String dcommunity = txtcommunity.getText();
        String dhos = txthospital.getText();
        //String level = txtLevel.getText();
        //String teaminfo = txtTeamInfo.getText();
        //String phno = txtPhno.getText();
        //String email = txtEmail.getText();
        //String title = txtPosTitle.getText();

        //Check if all fields are filled or not
        if(txtdname.getText().equals("") ||
            txtdid.getText().equals("") ||
            txtdage.getText().equals("") ||
            //dob.equals("") || 
                specz.equals("")){

            JOptionPane.showMessageDialog(this,"Please fill data in all fields!.");
            return;

        }

        //check if Doctor Id already present
        for(Doctor p : DoctorDirectory.getDoctorinstance().getDoctorlist())
        {
            if(p.getPersonid().equals(id))
            {
                JOptionPane.showMessageDialog(this,"Username already exists..Please use different User ID!");
                txtdid.setText("");
                return;
            }

        }

        Doctor d = new Doctor(id,name,age,specz,dcity,dcommunity,dhos);
        DoctorDirectory.getDoctorinstance().addNewDoctor(d);
        //d.setPersonname(name);
        //d.setPersonid(id);
        //d.setPersonage(age);
        //d.setPersondob(dob);
        //d.setDspecz(specz);

        JOptionPane.showMessageDialog(this,"New Doctor added!");
        // Clear all text fields after adding a employee record
        txtdname.setText("");
        txtdid.setText("");
        txtdage.setText("");
        //ddob.setDate(null);
        txthospital.setText("");
        txtcommunity.setText("");
        txtcity.setText("");
        
        dspecz.setSelectedIndex(0);
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        DefaultTableModel tblmodel = (DefaultTableModel) doctortable.getModel();
        if(doctortable.getSelectedRowCount()==1){

            String name = txtdname.getText();
            String empid = txtdid.getText();
            String age = txtdage.getText();
            String Dspecz = dspecz.getSelectedItem().toString();

            tblmodel.setValueAt(name, doctortable.getSelectedRow(), 0);
            tblmodel.setValueAt(empid, doctortable.getSelectedRow(), 1);
            tblmodel.setValueAt(age, doctortable.getSelectedRow(), 3);
            tblmodel.setValueAt(Dspecz, doctortable.getSelectedRow(), 2);

            for(Doctor e : DoctorDirectory.getDoctorinstance().getDoctorlist()){

                if(e.getPersonid().equals(empid)){
                    e.setPersonname(name);
                    e.setPersonage(Integer.parseInt(age));
                    e.setDspecz(Dspecz);

                }
            }
            JOptionPane.showMessageDialog(this,"Doctor record updated successfully!!.");
        }
        else{
            if(doctortable.getRowCount()==0){
                //if table is empty
                JOptionPane.showMessageDialog(this,"Table is empty.");
            }
            else{
                //if row is not selected or multiple row are selected
                JOptionPane.showMessageDialog(this,"Please select a single doctor record to update");
            }

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        int selectedrowindex = doctortable.getSelectedRow();

        if (selectedrowindex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel)doctortable.getModel();
        Doctor selectedemployee = (Doctor) model.getValueAt(selectedrowindex,0);
        DoctorDirectory.getDoctorinstance().deleteDoctor(selectedemployee);

        JOptionPane.showMessageDialog(this,"Doctor record deleted.");

        populateTable();
        

        
        

    }//GEN-LAST:event_jButton3ActionPerformed

    private void doctortableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doctortableMouseClicked
        // TODO add your handling code here:
        
         DefaultTableModel tblmodel = (DefaultTableModel) doctortable.getModel();
        
        String tblid = tblmodel.getValueAt(doctortable.getSelectedRow(),0).toString();
        String tblname = tblmodel.getValueAt(doctortable.getSelectedRow(),1).toString();
        String tblspecz = tblmodel.getValueAt(doctortable.getSelectedRow(),2).toString();
        String tblage = tblmodel.getValueAt(doctortable.getSelectedRow(),3).toString();
        //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        //String dob = sdf.format(pdob.getDate());
        //String tbldob = tblmodel.getValueAt(jTable1.getSelectedRow(),3).toString();

        txtdname.setText(tblname);
        txtdid.setText(tblid);
        txtdage.setText(tblage);
        dspecz.setSelectedItem(tblspecz);
        //dob.setDate(tbldob);
    }//GEN-LAST:event_doctortableMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        SystemAdmin sa = new SystemAdmin();
        sa.setVisible(true);
        
        dispose();
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable doctortable;
    private javax.swing.JComboBox<String> dspecz;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtcommunity;
    private javax.swing.JTextField txtdage;
    private javax.swing.JTextField txtdid;
    private javax.swing.JTextField txtdname;
    private javax.swing.JTextField txthospital;
    // End of variables declaration//GEN-END:variables


private void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel)doctortable.getModel();
        model.setRowCount(0);
        for(Doctor p : DoctorDirectory.getDoctorinstance().getDoctorlist()){
            Object[] row = new Object[10];
            row[0] = p;
            row[1] = p.getPersonname();
            row[2] = p.getDspecz();
            row[3] = p.getPersonage();
            
            model.addRow(row);
        }
    }


}
